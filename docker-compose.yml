version: '3'
services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: rails.Dockerfile
    volumes:
      - .:/app:cached
    ports:
      - 3000:3000
    environment:
      - DB_HOST=db # osidoridevdb.cbukuyrfnctk.ap-northeast-1.rds.amazonaws.com
      - DB_PORT=3306
      - DB_NAME=dev_osdr_db
      - DB_TEST_NAME=test_osdr_db
      - DB_USER=devusr
      - DB_TEST_USER=testusr
      - DB_PWD=pass
      - TZ=Asia/Tokyo
      - REDIS_HOST=redis
      - REDIS_PORT=6379

    # production
    #command:  bundle exec rake db:create RAILS_ENV=production
    #command:  bundle exec rake db:migrate RAILS_ENV=production
    #command:  bundle exec rake db:seed RAILS_ENV=production

    #command:  bundle exec puma -t 5:5 -p 3000 -e production -C config/puma/production.rb
    #env_file: .env.production
    #env_file: .env.staging

    # development
    command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b 0.0.0.0 -e development"
    env_file: .env.development
    tty: true
    stdin_open: true
    depends_on: 
      - db
      - redis
    links:
      - db
      - redis

#  worker:
#    container_name: worker
#    build:
#      context: .
#      dockerfile: rails.Dockerfile
#    volumes:
#      - .:/app:cached
#    environment:
#      - DB_HOST=db # osidoridevdb.cbukuyrfnctk.ap-northeast-1.rds.amazonaws.com
#      - DB_PORT=3306
#      - DB_NAME=dev_osdr_db
#      - DB_USER=devusr
#      - DB_PWD=pass
#      - TZ=Asia/Tokyo
#      - REDIS_HOST=redis
#      - REDIS_PORT=6379
#
#    # development
#    command: bundle exec sidekiq -C config/sidekiq.yml
#
#    env_file: .env.development
#    tty: true
#    stdin_open: true
#    depends_on:
#      - db
#      - redis
#    links:
#      - db
#      - redis

  db:
    container_name: db
    build:
      context: .
      dockerfile: mysql.Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: pwd
      MYSQL_USER: devusr
      MYSQL_TEST_USER: testusr
      MYSQL_PASSWORD: pass
      MYSQL_DATABASE: dev_osdr_db
      MYSQL_TEST_DATABASE: test_osdr_db
      TZ: "Asia/Tokyo"
    ports:
      - 3307:3306
    volumes:
      - ./tmp/db/mysql_data:/var/lib/mysql # データの永続化
      - ./docker/db/sql:/docker-entrypoint-initdb.d # 初期データ投入
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --innodb-use-native-aio=0

  redis:
    container_name: redis
    image: redis:latest
    build:
      context: .
      dockerfile: redis.Dockerfile
    ports:
      - 6379:6379
    command: redis-server --appendonly yes
    volumes:
      - .docker/redis/data:/data

  blueprint:
    container_name: blueprint
    build: 
      context: .
      dockerfile: blueprint.Dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./docker/blueprint/docs:/blueprint/docs
      - ./docker/blueprint/output:/blueprint/output